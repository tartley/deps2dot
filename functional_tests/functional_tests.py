from os import remove
from subprocess import Popen, PIPE
from unittest import TestCase

EXPECTED = b"""\
# Generated by deps2dot, https://github.com/tartley/deps2dot

digraph esperanto {

    graph [
    ]

    node [
    ]

}

"""

class FunctionalTest(TestCase):

    def assert_process_succeeds(self, cmdline):
        process = Popen(
            cmdline,
            shell=True,
            stdout=PIPE,
            stderr=PIPE,
        )
        stdout, stderr = process.communicate()
        self.assertEqual(process.returncode, 0, stderr)
        self.assertEqual(stderr, b'')
        return stdout

    def test_deps2dot_test(self):
        output = self.assert_process_succeeds(
            'deps2dot functional_tests/test_data/esperanto.deps',
        )
        self.assertEqual(output, EXPECTED)

    def test_pass_output_to_dot(self):
        self.assert_process_succeeds(
            'deps2dot functional_tests/test_data/esperanto.deps >test.dot',
        )
        self.assert_process_succeeds(
            'dot test.dot',
        )
        remove('test.dot')

