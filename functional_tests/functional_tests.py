from subprocess import Popen, PIPE
from unittest import TestCase

EXPECTED = b"""\
# Generated by deps2dot, https://github.com/tartley/deps2dot
digraph esperanto {

    graph [
    ]

    node [
    ]

    subgraph cluster_0 {
        label='esperanto';
    }
}
"""

class FunctionalTest(TestCase):

    def test_deps2dot_test(self):
        process = Popen(
            'deps2dot functional_tests/test_data/esperanto.deps',
            shell=True,
            stdout=PIPE,
            stderr=PIPE,
        )
        stdout, stderr = process.communicate()

        #self.assertEqual(process.returncode, 0, stderr)
        #self.assertEqual(stderr, b'')
        #self.assertEqual(stdout, EXPECTED)
